apply plugin: 'java'  // http://www.gradle.org/docs/current/userguide/java_plugin.html
apply plugin: 'eclipse'  // http://www.gradle.org/docs/current/userguide/eclipse_plugin.html
apply plugin: 'idea'  // http://www.gradle.org/docs/current/userguide/idea_plugin.html
apply plugin: 'fatjar'  // https://github.com/musketyr/gradle-fatjar-plugin
apply plugin: 'artifactory'  // http://www.jfrog.com/confluence/display/RTF/Gradle+Artifactory+Plugin
apply plugin: 'maven'
apply plugin: 'application'

sourceCompatibility = 1.7
targetCompatibility = 1.7

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'http://dl.bintray.com/jfrog/jfrog-jars' }
    }
    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.2'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:2.2.3'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
}

dependencies {
    compile 'com.google.guava:guava:17.0'
    compile 'io.dropwizard:dropwizard-assets:0.7.1' // easy serving of static assets
    compile 'io.dropwizard:dropwizard-core:0.7.1'
    compile 'io.dropwizard:dropwizard-client:0.7.1'
    compile 'io.dropwizard:dropwizard-auth:0.7.1'
    compile 'com.sun.jersey.contribs:jersey-multipart:1.18.1'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.3.3' // jackson YAML parser
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.3.3' // jackson XML parser
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.3.3'
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-pool2:2.2' // generic pool implementation
    compile 'org:jaudiotagger:2.0.3'

    // Jackson Guava - replace once version 2.2.3 or higher is released
    compile fileTree(dir: 'libs', include: '*.jar')

    testCompile 'com.google.guava:guava-testlib:14.0.1'
    testCompile 'org.testng:testng:6.8.5'
    testCompile 'io.dropwizard:dropwizard-testing:0.7.1' // simple testing
}

mainClassName = 'io.ault.backend.BackendApplication'

run {
    args 'server', 'backend.yml'
}

task migrate (type:JavaExec) {
    main mainClassName
    classpath sourceSets.main.runtimeClasspath
    args 'db', 'migrate', 'backend.yml'
}

test {
    useTestNG() {
        useDefaultListeners = true
        excludeGroups 'broken'
    }
}

fatJar {
    exclude 'META-INF/MANIFEST.MF'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'

    manifest {
        attributes 'Main-Class': 'io.ault.backend.BackendApplication'
    }

    classifier 'fatJar'
}

artifacts {
    archives file: file(fatJar.archivePath), name: project.name, type: 'jar', builtBy: fatJar
    archives file: file('backend.yml'), name: project.name, type: 'yml'
}
